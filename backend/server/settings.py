"""
Django settings for server project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-r0uwrg@dlevzi-3n0!!(v^p(2mn3rl35mq^4cq&r2d4zq9ut6v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    # django app
    'datacontroller',
    'stage1',
    'stage2',
    'stage3',
    'stage4',

    # third-party app
    'rest_framework',
    'corsheaders',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS Setting
CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

'''
App마다 MultiRouter 설정해서 Stage별로 DB구성

1. DATABASE_ROUTERS 설정
2. DATABASE_APPS_MAPPING 설정
3. DATABASES 안에
'stage1': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stage1',
        'HOST': 'localhost',
        'USER': 'root',
        'PASSWORD': '123456',
        'PORT': 3306,
        'CHARSET': 'utf8mb4',
    },
형식으로 DB 추가 - USER, PASSWORD는 따로 파일로 뺄 것.
'''

DATABASE_ROUTERS = {
    
    'stage1.routers.MultiDBRouter',
    'stage2.routers.MultiDBRouter',
    'stage3.routers.MultiDBRouter',
    'stage4.routers.MultiDBRouter',
    
}

DATABASES_APP_MAPPING = {
    'stage1': 'stage1',
    'stage2': 'stage2',
    'stage3': 'stage3',
    'stage4': 'stage4',
}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    
    'stage1': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stage1',
        'HOST': 'k5a106.p.ssafy.io',
        'USER': 'aliceinsqland',
        'PASSWORD': '1234',
        'PORT': 3306,
        'CHARSET': 'utf8mb4',
    },
    'stage2': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stage2',
        'HOST': 'k5a106.p.ssafy.io',
        'USER': 'aliceinsqland',
        'PASSWORD': '1234',
        'PORT': 3306,
        'CHARSET': 'utf8mb4',
    },
    'stage3': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stage3',
        'HOST': 'k5a106.p.ssafy.io',
        'USER': 'aliceinsqland',
        'PASSWORD': '1234',
        'PORT': 3306,
        'CHARSET': 'utf8mb4',
    },
    'stage4': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stage4',
        'HOST': 'k5a106.p.ssafy.io',
        'USER': 'aliceinsqland',
        'PASSWORD': '1234',
        'PORT': 3306,
        'CHARSET': 'utf8mb4',
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
